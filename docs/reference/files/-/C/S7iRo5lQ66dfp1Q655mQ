1778294585
waR3U4bTeM%3Afe64e59e5be3d55fc5fd82d9bc7a43e3-8249365e4cc3cfeaaf6e1969d8a6e2e4
s:15980:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"8249365e4cc3cfeaaf6e1969d8a6e2e4";s:39:" phpDocumentor\Reflection\Php\File name";s:10:"UuidV7.php";s:39:" phpDocumentor\Reflection\Php\File path";s:44:"src/Libraries/Database/PrimaryKey/UuidV7.php";s:41:" phpDocumentor\Reflection\Php\File source";s:3511:"<?php
namespace Database\PrimaryKey;

trait UuidV7 {
	/**
	 * @var \Random\Randomizer
	 */
	private \Random\Randomizer $randomizer;

	/**
	 * Generates a version 7 UUID (Universally Unique Identifier).
	 * 
	 * IMPORTANT:
	 * V7 is a time-based sortable UUID that uses the current time and random bytes.
	 * Do not use this UUID for security purposes as it leaks the time of generation.
	 * V7 by design is not meant to be secure, but rather to be unique and sortable.
	 * It is designed for use in databases and other systems where a unique identifier is needed.
	 * 
	 *
	 * @return string A version 7 UUID in the format xxxxxxxx-xxxx-7xxx-yxxx-xxxxxxxxxxxx
	 *                where x is a hexadecimal digit and y is one of 8, 9, A, or B.
	 *                The UUID is generated using a combination of the current time and random bytes.
	 *                The first 48 bits are the Unix Epoch timestamp in milliseconds,
	 *                and the remaining 80 bits are random bytes.
	 */
	public function generatePrimaryKey(): string {
		// 0. Initialize the randomizer
		$this->randomizer = new \Random\Randomizer();

		// 1. Get 48-bit Unix Epoch timestamp in milliseconds.
        // This is the most significant 48 bits of the UUID.
        $timeMs = (int) (microtime(true) * 1000);

        // Pack the 48-bit timestamp into 6 big-endian (network byte order) bytes.
        // 'n*' packs 16-bit unsigned shorts. So we split our 48-bit timestamp
        // into three 16-bit chunks.
        $t1 = ($timeMs >> 32) & 0xFFFF; // Most significant 16 bits
        $t2 = ($timeMs >> 16) & 0xFFFF; // Middle 16 bits
        $t3 = $timeMs & 0xFFFF;     	 // Least significant 16 bits
        $timestampBinary = pack('n*', $t1, $t2, $t3); // Resulting 6 bytes

        // 2. Get 10 cryptographically secure random bytes for the remaining 80 bits
        // These will form the 'rand_a' and 'rand_b' fields, and the version/variant bits.
        $random_bytes = $this->randomizer->getBytes(10);

        // 3. Construct the full 16-byte UUID binary string.
        // The first 6 bytes are the timestamp, the next 10 are random.
        $uuidBinary = $timestampBinary . $random_bytes;

        // 4. Inject UUIDv7 version (0111 / 7) into the 7th byte (index 6).
        // This byte contains the 4 version bits and the first 4 bits of 'rand_a'.
        // We preserve the lower 4 bits of the original byte and set the upper 4 to '7' (0111).
        $uuidBinary[6] = chr((ord($uuidBinary[6]) & 0x0F) | 0x70); // 0x70 is 01110000 binary

        // 5. Inject UUID variant (10xx) into the 9th byte (index 8).
        // This byte contains the 2 variant bits and the first 6 bits of 'rand_b'.
        // We preserve the lower 6 bits of the original byte and set the upper 2 to '10' (binary).
        $uuidBinary[8] = chr((ord($uuidBinary[8]) & 0x3F) | 0x80); // 0x80 is 10000000 binary

        // 6. Convert the 16-byte binary UUID to its 32-character hexadecimal representation.
        // This performs one single, efficient hex encoding operation.
        $hex = bin2hex($uuidBinary);

        // 7. Format the hex string with hyphens for the final UUID string.
        return sprintf(
            '%s-%s-%s-%s-%s',
            substr($hex, 0, 8),    // Timestamp part 1
            substr($hex, 8, 4),    // Timestamp part 2
            substr($hex, 12, 4),   // Version and rand_a
            substr($hex, 16, 4),   // Variant and rand_b part 1
            substr($hex, 20, 12)   // Rand_b part 2
        );
	}
}";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:20:"\Database\PrimaryKey";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:20:"\Database\PrimaryKey";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"PrimaryKey";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:1:{s:27:"\Database\PrimaryKey\UuidV7";O:35:"phpDocumentor\Reflection\Php\Trait_":8:{s:42:" phpDocumentor\Reflection\Php\Trait_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\Database\PrimaryKey\UuidV7";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"UuidV7";}s:45:" phpDocumentor\Reflection\Php\Trait_ docBlock";N;s:47:" phpDocumentor\Reflection\Php\Trait_ properties";a:1:{s:40:"\Database\PrimaryKey\UuidV7::$randomizer";O:37:"phpDocumentor\Reflection\Php\Property":11:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:40:"\Database\PrimaryKey\UuidV7::$randomizer";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"randomizer";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:18:"\Random\Randomizer";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"Randomizer";}}s:15:" * variableName";s:0:"";}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:19:"Database\PrimaryKey";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";N;s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:8;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Property endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:8;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:18:"\Random\Randomizer";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"Randomizer";}}s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\Trait_ methods";a:1:{s:49:"\Database\PrimaryKey\UuidV7::generatePrimaryKey()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:59:"Generates a version 7 UUID (Universally Unique Identifier).";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:336:"IMPORTANT:
V7 is a time-based sortable UUID that uses the current time and random bytes.
Do not use this UUID for security purposes as it leaks the time of generation.
V7 by design is not meant to be secure, but rather to be unique and sortable.
It is designed for use in databases and other systems where a unique identifier is needed.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:317:"A version 7 UUID in the format xxxxxxxx-xxxx-7xxx-yxxx-xxxxxxxxxxxx
where x is a hexadecimal digit and y is one of 8, 9, A, or B.
The UUID is generated using a combination of the current time and random bytes.
The first 48 bits are the Unix Epoch timestamp in milliseconds,
and the remaining 80 bits are random bytes.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:43;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:49:"\Database\PrimaryKey\UuidV7::generatePrimaryKey()";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"generatePrimaryKey";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:26;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:73;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Trait_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Trait_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:4;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Trait_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:74;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Trait_ metadata";a:0:{}}}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";